import React from 'react';
import { Alert, Space, Typography, Tag, Progress } from 'antd';
import { TeamOutlined } from '@ant-design/icons';

const { Text } = Typography;

interface ValidationSummaryProps {
    totalGuests: number;
    totalAdults: number;
    totalChildren: number;
    totalCapacity: number;
    selectedRoomsCount: number;
}

const ValidationSummary: React.FC<ValidationSummaryProps> = ({
    totalGuests,
    totalAdults,
    totalChildren,
    totalCapacity,
    selectedRoomsCount
}) => {
    const hasEnoughCapacity = totalCapacity >= totalGuests;
    const missingCapacity = hasEnoughCapacity ? 0 : totalGuests - totalCapacity;
    const capacityPercentage = Math.min((totalCapacity / totalGuests) * 100, 100);

    return (
        <Space direction="vertical" className="w-full" size="small">
            {/* Guest Summary */}
            <div className="bg-gray-50 p-3 rounded-lg">
                <div className="flex items-center justify-between mb-2">
                    <Text strong>
                        <TeamOutlined className="mr-1" />
                        Th√¥ng tin kh√°ch
                    </Text>
                    <div className="flex gap-2">
                        <Tag color="blue">{totalAdults} ng∆∞·ªùi l·ªõn</Tag>
                        {totalChildren > 0 && <Tag color="green">{totalChildren} tr·∫ª em</Tag>}
                    </div>
                </div>
                <div className="text-sm text-gray-600">
                    T·ªïng: {totalGuests} kh√°ch ‚Ä¢ {selectedRoomsCount} ph√≤ng ƒë√£ ch·ªçn
                </div>
            </div>

            {/* Capacity Validation */}
            <div>
                <div className="flex items-center justify-between mb-2">
                    <Text strong>Ki·ªÉm tra ch·ªó ng·ªìi</Text>
                    <Text className={hasEnoughCapacity ? 'text-green-600' : 'text-red-600'}>
                        {totalCapacity}/{totalGuests} ch·ªó
                    </Text>
                </div>
                
                <Progress
                    percent={capacityPercentage}
                    status={hasEnoughCapacity ? 'success' : 'exception'}
                    strokeColor={hasEnoughCapacity ? '#52c41a' : '#ff4d4f'}
                    showInfo={false}
                    size="small"
                />

                <div className="mt-2">
                    {hasEnoughCapacity ? (
                        <Alert
                            message="‚úÖ ƒê·ªß ch·ªó cho t·∫•t c·∫£ kh√°ch"
                            type="success"
                            showIcon={false}
                            className="text-sm py-1"
                        />
                    ) : (
                        <Alert
                            message={`‚ùå Thi·∫øu ${missingCapacity} ch·ªó`}
                            description="Vui l√≤ng ch·ªçn th√™m ph√≤ng ho·∫∑c lo·∫°i ph√≤ng l·ªõn h∆°n"
                            type="error"
                            showIcon={false}
                            className="text-sm py-1"
                        />
                    )}
                </div>
            </div>

            {/* Helpful Tips */}
            <div className="text-xs text-gray-500 space-y-1">
                <div>üí° Tr·∫ª em c√≥ th·ªÉ ·ªü chung ph√≤ng v·ªõi b·ªë m·∫π</div>
                <div>üîí H·ªá th·ªëng s·∫Ω ki·ªÉm tra tr∆∞·ªõc khi thanh to√°n</div>
            </div>
        </Space>
    );
};

export default ValidationSummary;
